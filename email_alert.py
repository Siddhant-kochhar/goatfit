#!/usr/bin/env python3
"""
GoatFit Emergency Email Alert Service - Gmail SMTP
Sends notifications to family/friends when vital signs spike using Gmail
"""
import smtplib
import ssl
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from datetime import datetime
from typing import Optional, List

# Gmail SMTP Configuration
GMAIL_ADDRESS = "siddhant.kochhar1@gmail.com"  # Replace with your Gmail address
GMAIL_APP_PASSWORD = "oxonjtswouwxceth"  # Replace with your Gmail App Password
SENDER_NAME = "GoatFit Emergency Alert"

class EmergencyAlertService:
    def __init__(self, gmail_address: str = GMAIL_ADDRESS, gmail_password: str = GMAIL_APP_PASSWORD):
        self.gmail_address = gmail_address
        self.gmail_password = gmail_password
        self.smtp_server = "smtp.gmail.com"
        self.smtp_port = 587  # TLS port
        
        # Validate configuration
        if not gmail_address or gmail_address == "your-gmail@gmail.com":
            print("‚ö†Ô∏è  Gmail address not configured. Please update GMAIL_ADDRESS in email_alert.py")
        if not gmail_password or gmail_password == "your-16-digit-app-password":
            print("‚ö†Ô∏è  Gmail App Password not configured. Please update GMAIL_APP_PASSWORD in email_alert.py")
    
    def send_emergency_alert(self, 
                           emergency_contact_email: str,
                           user_name: str,
                           vital_type: str,
                           vital_value: float,
                           threshold: float,
                           timestamp: str = None) -> bool:
        """
        Send emergency alert to family/friend when vitals spike
        
        Args:
            emergency_contact_email: Email of family member/friend
            user_name: Name of the user having the emergency
            vital_type: Type of vital (Heart Rate, Blood Pressure, etc.)
            vital_value: Current vital value
            threshold: Threshold that was exceeded
            timestamp: When the spike occurred
        
        Returns:
            bool: True if email sent successfully, False otherwise
        """
        
        if not timestamp:
            timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        
        # Determine severity and emoji based on vital type
        severity_info = self._get_severity_info(vital_type, vital_value, threshold)
        
        subject = f"üö® EMERGENCY: {user_name} - {vital_type} Alert"
        
        # Create detailed alert message
        text_body = f"""
üö® EMERGENCY HEALTH ALERT üö®

Patient: {user_name}
Alert Type: {vital_type} Spike Detected
Current Value: {vital_value} {severity_info['unit']}
Threshold Exceeded: {threshold} {severity_info['unit']}
Severity: {severity_info['level']}
Time: {timestamp}

{severity_info['message']}

‚ö†Ô∏è IMMEDIATE ACTION RECOMMENDED:
‚Ä¢ Contact {user_name} immediately
‚Ä¢ Consider calling emergency services if unable to reach
‚Ä¢ Check their current location and condition

This alert was automatically generated by GoatFit Health Monitoring System.

üì± Dashboard: http://localhost:8000/vitals
        """
        
        html_body = f"""
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Emergency Health Alert</title>
        </head>
        <body style="font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Arial, sans-serif; margin: 0; padding: 0; background: #000; color: #fff;">
            <div style="max-width: 600px; margin: 0 auto; background: #000;">
                
                <!-- Header -->
                <div style="background: linear-gradient(135deg, #ff3366, #ff1744); padding: 30px 20px; text-align: center;">
                    <h1 style="margin: 0; font-size: 28px; color: #fff; font-weight: 700;">
                        üö® EMERGENCY HEALTH ALERT
                    </h1>
                    <p style="margin: 10px 0 0 0; font-size: 16px; color: rgba(255,255,255,0.9);">
                        Immediate attention required for {user_name}
                    </p>
                </div>
                
                <!-- Critical Info Panel -->
                <div style="background: rgba(255, 51, 102, 0.1); border: 2px solid #ff3366; margin: 20px; border-radius: 12px; padding: 25px;">
                    <h2 style="color: #ff3366; margin: 0 0 20px 0; font-size: 20px;">
                        ü´Ä Critical Vital Signs Detected
                    </h2>
                    
                    <div style="display: grid; gap: 15px;">
                        <div style="background: rgba(0,0,0,0.5); padding: 15px; border-radius: 8px; border-left: 4px solid {severity_info['color']};">
                            <strong style="color: #fff;">Patient:</strong> 
                            <span style="color: #00ff88; font-size: 18px;">{user_name}</span>
                        </div>
                        
                        <div style="background: rgba(0,0,0,0.5); padding: 15px; border-radius: 8px; border-left: 4px solid {severity_info['color']};">
                            <strong style="color: #fff;">{vital_type}:</strong> 
                            <span style="color: {severity_info['color']}; font-size: 24px; font-weight: bold;">{vital_value} {severity_info['unit']}</span>
                        </div>
                        
                        <div style="background: rgba(0,0,0,0.5); padding: 15px; border-radius: 8px; border-left: 4px solid {severity_info['color']};">
                            <strong style="color: #fff;">Severity:</strong> 
                            <span style="color: {severity_info['color']}; font-weight: bold; font-size: 16px;">{severity_info['level']}</span>
                        </div>
                        
                        <div style="background: rgba(0,0,0,0.5); padding: 15px; border-radius: 8px; border-left: 4px solid {severity_info['color']};">
                            <strong style="color: #fff;">Detected:</strong> 
                            <span style="color: #fff;">{timestamp}</span>
                        </div>
                    </div>
                </div>
                
                <!-- Action Required Panel -->
                <div style="background: rgba(255, 170, 0, 0.1); border: 2px solid #ffaa00; margin: 20px; border-radius: 12px; padding: 25px;">
                    <h3 style="color: #ffaa00; margin: 0 0 15px 0; font-size: 18px;">
                        ‚ö†Ô∏è IMMEDIATE ACTION REQUIRED
                    </h3>
                    
                    <div style="background: rgba(255, 170, 0, 0.1); padding: 15px; border-radius: 8px; margin: 15px 0;">
                        <p style="color: #ffaa00; font-weight: bold; margin: 0; font-size: 16px;">
                            {severity_info['message']}
                        </p>
                    </div>
                    
                    <h4 style="color: #fff; margin: 20px 0 10px 0;">Emergency Response Steps:</h4>
                    <ol style="line-height: 1.8; color: #fff; padding-left: 20px;">
                        <li><strong style="color: #ff3366;">üìû Contact {user_name} immediately</strong> - Call their primary phone number</li>
                        <li><strong style="color: #ff3366;">üìç Check location</strong> - Verify their current whereabouts and safety</li>
                        <li><strong style="color: #ff3366;">üè• Medical assessment</strong> - Ask about symptoms, chest pain, dizziness</li>
                        <li><strong style="color: #ff3366;">üöë Emergency services</strong> - Call 108 (India) or local emergency if unable to reach</li>
                        <li><strong style="color: #ff3366;">üë®‚Äç‚öïÔ∏è Medical history</strong> - Inform emergency services of any known conditions</li>
                    </ol>
                </div>
                
                <!-- Quick Actions Panel -->
                <div style="background: rgba(0, 255, 0, 0.1); border: 2px solid #00ff88; margin: 20px; border-radius: 12px; padding: 25px;">
                    <h3 style="color: #00ff88; margin: 0 0 15px 0; font-size: 18px;">
                        üì± Quick Emergency Actions
                    </h3>
                    
                    <div style="display: grid; gap: 10px;">
                        <div style="background: rgba(0,0,0,0.5); padding: 12px; border-radius: 6px;">
                            <strong style="color: #00ff88;">üìû Primary Contact:</strong> Call {user_name} directly
                        </div>
                        <div style="background: rgba(0,0,0,0.5); padding: 12px; border-radius: 6px;">
                            <strong style="color: #00ff88;">üè• Emergency:</strong> 108 (India) / 911 (US) / 112 (EU)
                        </div>
                        <div style="background: rgba(0,0,0,0.5); padding: 12px; border-radius: 6px;">
                            <strong style="color: #00ff88;">üìß Update:</strong> Reply to this email with status updates
                        </div>
                    </div>
                </div>
                
                <!-- System Info -->
                <div style="text-align: center; padding: 30px 20px; border-top: 1px solid #333; margin: 20px;">
                    <div style="color: #888; font-size: 14px;">
                        <p style="margin: 5px 0;"><strong style="color: #fff;">GoatFit Health Monitoring System</strong></p>
                        <p style="margin: 5px 0;">Emergency Contact Network ‚Ä¢ Real-time Health Guardian</p>
                        <p style="margin: 5px 0;">Alert ID: {datetime.now().strftime('%Y%m%d-%H%M%S')}</p>
                        <p style="margin: 15px 0 5px 0; color: #ff3366; font-weight: bold;">
                            üö® This is an automated emergency alert. Please take immediate action.
                        </p>
                    </div>
                </div>
                
            </div>
        </body>
        </html>
        """
        
        return self._send_gmail_email(emergency_contact_email, subject, text_body, html_body)
    
    def _get_severity_info(self, vital_type: str, value: float, threshold: float) -> dict:
        """Determine severity level and appropriate messaging based on vital type"""
        
        severity_configs = {
            "Heart Rate": {
                "unit": "BPM",
                "high_critical": 180,
                "high_warning": 140,
                "low_critical": 40,
                "low_warning": 50
            },
            "Blood Pressure": {
                "unit": "mmHg",
                "high_critical": 180,
                "high_warning": 140,
                "low_critical": 60,
                "low_warning": 90
            },
            "Temperature": {
                "unit": "¬∞F",
                "high_critical": 104,
                "high_warning": 101,
                "low_critical": 95,
                "low_warning": 97
            }
        }
        
        config = severity_configs.get(vital_type, {"unit": "", "high_critical": 999, "high_warning": 999})
        
        if value >= config.get("high_critical", 999):
            return {
                "level": "CRITICAL HIGH",
                "color": "#ff0000",
                "unit": config["unit"],
                "message": f"üö® CRITICAL: This {vital_type.lower()} reading is dangerously high and requires immediate medical attention!"
            }
        elif value >= config.get("high_warning", 999):
            return {
                "level": "HIGH WARNING",
                "color": "#ff6600",
                "unit": config["unit"],
                "message": f"‚ö†Ô∏è WARNING: This {vital_type.lower()} reading is significantly elevated and should be monitored closely."
            }
        elif value <= config.get("low_critical", 0):
            return {
                "level": "CRITICAL LOW",
                "color": "#0066ff",
                "unit": config["unit"],
                "message": f"üö® CRITICAL: This {vital_type.lower()} reading is dangerously low and requires immediate medical attention!"
            }
        elif value <= config.get("low_warning", 0):
            return {
                "level": "LOW WARNING",
                "color": "#0099ff",
                "unit": config["unit"],
                "message": f"‚ö†Ô∏è WARNING: This {vital_type.lower()} reading is significantly low and should be monitored closely."
            }
        else:
            return {
                "level": "ABNORMAL",
                "color": "#ffaa00",
                "unit": config["unit"],
                "message": f"‚ö†Ô∏è ALERT: This {vital_type.lower()} reading is outside normal range."
            }
    
    def _send_gmail_email(self, to_email: str, subject: str, text_body: str, html_body: str) -> bool:
        """Send email using Gmail SMTP"""
        
        # Create message
        message = MIMEMultipart("alternative")
        message["Subject"] = subject
        message["From"] = f"{SENDER_NAME} <{self.gmail_address}>"
        message["To"] = to_email
        
        # Add text and HTML parts
        text_part = MIMEText(text_body, "plain")
        html_part = MIMEText(html_body, "html")
        
        message.attach(text_part)
        message.attach(html_part)
        
        try:
            # Create secure connection and send email
            context = ssl.create_default_context()
            
            with smtplib.SMTP(self.smtp_server, self.smtp_port) as server:
                server.starttls(context=context)  # Enable TLS encryption
                server.login(self.gmail_address, self.gmail_password)
                server.send_message(message)
            
            print(f"‚úÖ Emergency alert sent successfully to {to_email}")
            return True
            
        except smtplib.SMTPAuthenticationError:
            print("‚ùå Gmail authentication failed. Check your email and app password.")
            print("üí° Make sure you're using a Gmail App Password, not your regular password.")
            return False
        except smtplib.SMTPException as e:
            print(f"‚ùå SMTP error occurred: {e}")
            return False
        except Exception as e:
            print(f"‚ùå Error sending emergency alert: {e}")
            return False
    
    def test_email_service(self, test_email: str) -> bool:
        """Test the Gmail email service with a simple test message"""

        subject = "üß™ GoatFit Emergency Alert System Test"
        text_body = f"""
üß™ GoatFit Emergency Alert System Test

This is a test message from GoatFit Emergency Alert System.

If you received this email, the emergency contact system is working correctly!

‚úÖ System Status: Operational
üìß Gmail SMTP: Active  
üö® Emergency Alerts: Ready

üìä System Configuration:
‚Ä¢ Email Service: Gmail SMTP
‚Ä¢ Server: smtp.gmail.com
‚Ä¢ Port: 587 (TLS)
‚Ä¢ Sender: {self.gmail_address}

This test was sent from GoatFit Health Monitoring Dashboard.

---
GoatFit - Your Health Guardian üè•üíö
        """
        
        html_body = f"""
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="UTF-8">
            <title>GoatFit System Test</title>
        </head>
        <body style="font-family: Arial, sans-serif; margin: 0; padding: 0; background: #000; color: #fff;">
            <div style="max-width: 600px; margin: 0 auto; background: #000;">
                
                <!-- Header -->
                <div style="background: linear-gradient(135deg, #00ff88, #00cc66); padding: 30px 20px; text-align: center;">
                    <h1 style="margin: 0; font-size: 28px; color: #000; font-weight: 700;">
                        üß™ GoatFit System Test
                    </h1>
                    <p style="margin: 10px 0 0 0; font-size: 16px; color: rgba(0,0,0,0.8);">
                        Emergency Alert System Verification
                    </p>
                </div>
                
                <!-- Success Panel -->
                <div style="background: rgba(0, 255, 136, 0.1); border: 2px solid #00ff88; margin: 20px; border-radius: 12px; padding: 25px;">
                    <h2 style="color: #00ff88; margin: 0 0 20px 0; font-size: 20px;">
                        ‚úÖ Test Successful!
                    </h2>
                    <p style="color: #fff; font-size: 16px; line-height: 1.6;">
                        If you received this email, the emergency contact system is working correctly!
                    </p>
                    
                    <h3 style="color: #ffaa00; margin: 20px 0 15px 0;">üìä System Status:</h3>
                    <div style="display: grid; gap: 10px;">
                        <div style="background: rgba(0,0,0,0.5); padding: 12px; border-radius: 6px; border-left: 4px solid #00ff88;">
                            <strong style="color: #00ff88;">System Status:</strong> 
                            <span style="color: #00ff88;">Operational</span>
                        </div>
                        <div style="background: rgba(0,0,0,0.5); padding: 12px; border-radius: 6px; border-left: 4px solid #00ff88;">
                            <strong style="color: #00ff88;">Gmail SMTP:</strong> 
                            <span style="color: #00ff88;">Active</span>
                        </div>
                        <div style="background: rgba(0,0,0,0.5); padding: 12px; border-radius: 6px; border-left: 4px solid #00ff88;">
                            <strong style="color: #00ff88;">Emergency Alerts:</strong> 
                            <span style="color: #00ff88;">Ready</span>
                        </div>
                        <div style="background: rgba(0,0,0,0.5); padding: 12px; border-radius: 6px; border-left: 4px solid #00ff88;">
                            <strong style="color: #00ff88;">Sender:</strong> 
                            <span style="color: #fff;">{self.gmail_address}</span>
                        </div>
                    </div>
                </div>
                
                <!-- What Happens Panel -->
                <div style="background: rgba(255, 170, 0, 0.1); border: 2px solid #ffaa00; margin: 20px; border-radius: 12px; padding: 25px;">
                    <h3 style="color: #ffaa00; margin: 0 0 15px 0; font-size: 18px;">
                        üö® What Happens in Real Emergency?
                    </h3>
                    <p style="color: #fff; margin-bottom: 15px;">If your heart rate exceeds safe limits, this system will:</p>
                    <ul style="color: #fff; line-height: 1.8; padding-left: 20px;">
                        <li>üö® Detect dangerous vital signs automatically</li>
                        <li>üìß Send immediate alerts to all your emergency contacts</li>
                        <li>üìä Include detailed health data and severity level</li>
                        <li>üìû Provide clear action instructions for your family</li>
                        <li>‚è∞ Timestamp everything for medical records</li>
                    </ul>
                </div>
                
                <!-- Footer -->
                <div style="text-align: center; padding: 30px 20px; border-top: 1px solid #333; margin: 20px;">
                    <div style="color: #888; font-size: 14px;">
                        <p style="margin: 5px 0;"><strong style="color: #fff;">GoatFit Health Monitoring System</strong></p>
                        <p style="margin: 5px 0;">Your Personal Health Guardian ‚Ä¢ Family Safety Network</p>
                        <p style="margin: 5px 0;">Test completed at {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}</p>
                        <p style="margin: 15px 0 5px 0; color: #00ff88; font-weight: bold;">
                            üè•üíö Your health and safety are our priority
                        </p>
                    </div>
                </div>
                
            </div>
        </body>
        </html>
        """
        
        return self._send_gmail_email(test_email, subject, text_body, html_body)

# Create global instance
alert_service = EmergencyAlertService()

# Helper functions for easy use
def send_heart_rate_alert(emergency_email: str, user_name: str, heart_rate: float, threshold: float = 140):
    """Quick function to send heart rate spike alert"""
    return alert_service.send_emergency_alert(
        emergency_email, user_name, "Heart Rate", heart_rate, threshold
    )

def send_test_alert(test_email: str):
    """Quick function to test email service"""
    return alert_service.test_email_service(test_email)

if __name__ == "__main__":
    # Configuration check and setup guide
    print("üè• GoatFit Emergency Alert System - Gmail SMTP Version")
    print("=" * 60)
    
    # Check if configuration is needed
    if GMAIL_ADDRESS == "your-gmail@gmail.com":
        print("‚ö†Ô∏è  CONFIGURATION REQUIRED:")
        print("   1. Open email_alert.py in your editor")
        print("   2. Replace 'your-gmail@gmail.com' with your actual Gmail address")
        print("   3. Get Gmail App Password:")
        print("      ‚Ä¢ Go to https://myaccount.google.com/security")
        print("      ‚Ä¢ Enable 2-Step Verification")
        print("      ‚Ä¢ Go to 'App Passwords'")
        print("      ‚Ä¢ Generate password for 'Mail'")
        print("      ‚Ä¢ Replace 'your-16-digit-app-password' with that password")
        print("   4. Run this script again to test")
        print("\nüí° Need help? Check the README.md for detailed setup instructions.")
        exit(1)
    
    # Test the service if configured
    test_email = input("Enter email address to test (or press Enter to use sender email): ").strip()
    if not test_email:
        test_email = GMAIL_ADDRESS
    
    print(f"\nüß™ Testing Gmail emergency system...")
    print(f"   üìß Sender: {GMAIL_ADDRESS}")
    print(f"   üìß Recipient: {test_email}")
    print(f"   üì§ Sending test email...")
    
    # Create service and test
    service = EmergencyAlertService()
    test_result = service.test_email_service(test_email)
    
    if test_result:
        print(f"\nüéâ SUCCESS! Test email sent to {test_email}")
        print("üìß Check your inbox for the test message!")
        
        # Offer to send emergency alert test
        send_emergency = input("\nSend emergency alert test too? (y/n): ").strip().lower()
        if send_emergency == 'y':
            print(f"\nüö® Sending emergency alert test...")
            emergency_result = send_heart_rate_alert(
                emergency_email=test_email,
                user_name="Test Patient", 
                heart_rate=185,
                threshold=140
            )
            if emergency_result:
                print(f"‚úÖ Emergency alert test sent successfully!")
                print(f"üìß Check {test_email} for both test emails!")
            else:
                print("‚ùå Emergency alert test failed.")
    else:
        print(f"\n‚ùå Test failed. Please check your Gmail configuration:")
        print("   ‚Ä¢ Verify Gmail address is correct")
        print("   ‚Ä¢ Ensure you're using Gmail App Password (not regular password)")
        print("   ‚Ä¢ Check internet connection")
        print("   ‚Ä¢ Make sure 2-Step Verification is enabled on Gmail")
